
spark {
  master = "spark://192.168.1.11:7077"
//  master = "local[4]"

  server {

    jobdao = "services.io.JobFileDAO"

    filedao {
      rooddir = "/tmp/spark-server"
    }

    // todo:: store data in database
    sqldao {

    }

    # Number of job results to keep per JobResultActor/context
    job-result-cache-size = 5000

    # Time out for job server to wait while creating contexts
    context-creation-timeout = 15 s

    # Number of jobs that can be run simultaneously per context
    # If not set, defaults to number of cores on machine where jobserver is running
    max-jobs-per-context = 8
  }

  # predefined Spark contexts
  # Below is an example, but do not uncomment it.   Everything defined here is carried over to
  # deploy-time configs, so they will be created in all environments.  :(
  contexts {
    # abc-demo {
    #   num-cpu-cores = 4            # Number of cores to allocate.  Required.
    #   memory-per-node = 1024m      # Executor memory per node, -Xmx style eg 512m, 1G, etc.
    # }
    # define additional contexts here
  }

  # Default settings for ad hoc as well as manually created contexts
  # You can add any Spark config params here, for example, spark.mesos.coarse = true
  context-settings {
    num-cpu-cores = 2           # Number of cores to allocate.  Required.
    memory-per-node = 512m      # Executor memory per node, -Xmx style eg 512m, 1G, etc.

    # A zero-arg class implementing cn.edu.zju.king.jobserver.util.DefaultSparkMasterProvider
    # Determines the type of jobs that can run in a SparkContext
    context-factory = services.contexts.DefaultSparkContextFactory
//    context-factory = services.contexts.SQLContextFactory

    # uris of jars to be loaded into the classpath for this context. Uris is a string list, or a string separated by commas ','
    # dependent-jar-uris = ["file:///some/path/present/in/each/mesos/slave/somepackage.jar"]

    passthrough {
      spark.driver.allowMultipleContexts = true  # Ignore the Multiple context exception related with SPARK-2243
    }
  }

}

play.modules.enabled = ${?play.modules.enabled} ["modules.JobDaoModules", "modules.ActorModules"]


